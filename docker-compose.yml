services:
  app:
    image: ghcr.io/serpensin/sentrydiscord.dev:latest
    container_name: app
    hostname: app
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://sentrydiscord:sentrydiscord@db:5432/sentrydiscord
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/badges/events"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15
    container_name: db
    hostname: db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=sentrydiscord
      - POSTGRES_USER=sentrydiscord
      - POSTGRES_PASSWORD=sentrydiscord
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sentrydiscord -d sentrydiscord"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s

  #cloudflared:
  #  image: cloudflare/cloudflared:latest
  #  container_name: cloudflared
  #  environment:
  #    - TUNNEL_TOKEN=<YOUR_TUNNEL_TOKEN>
  #    - TUNNEL_METRICS=0.0.0.0:60123
  #  command: tunnel --no-autoupdate run
  #  healthcheck:
  #    test: ["CMD-SHELL", "cloudflared tunnel --metrics localhost:60123 ready"]
  #    interval: 30s
  #    timeout: 5s
  #    retries: 3
  #    start_period: 10s
  #  depends_on:
  #    app:
  #      condition: service_healthy

volumes:
  db_data:
    driver: local
