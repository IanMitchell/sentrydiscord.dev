name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm/v7, linux/arm64/v8, linux/ppc64le, linux/s390x]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Push Docker Image
      run: |
        REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
        REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
        IMAGE_NAME="ghcr.io/$REPO_OWNER/$REPO_NAME"
        PLATFORM_TAG=$(echo "${{ matrix.platform }}" | tr '/' '-')
        docker buildx build \
          --compress \
          --platform ${{ matrix.platform }} \
          --tag $IMAGE_NAME:latest-${PLATFORM_TAG} \
          --push .
      shell: bash

  create-multiarch-latest:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Multi-Architecture Latest Tag
      run: |
        REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
        REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
        IMAGE_NAME="ghcr.io/$REPO_OWNER/$REPO_NAME"
        docker buildx imagetools create \
          --tag $IMAGE_NAME:latest \
          $IMAGE_NAME:latest-linux-amd64 \
          $IMAGE_NAME:latest-linux-arm-v7 \
          $IMAGE_NAME:latest-linux-arm64-v8 \
          $IMAGE_NAME:latest-linux-ppc64le \
          $IMAGE_NAME:latest-linux-s390x
      shell: bash
